// Autogenerated by https://github.com/astrokin/swagger-codegen //Do not modify it without strong needs!
import Moya

enum {{classname}} { {{#operations}}{{#operation}}
    case {{operationId}}({{operationId}}RequestAttributes){{/operation}}{{/operations}}
}

//MARK: - TargetType
extension {{classname}}: TargetType {

    var baseURL: NSURL {
        return NSURL(string: "https://10.6.129.60")!
    }

    var path: String {
        switch self { {{#operations}}{{#operation}}
            case {{operationId}}: return "{{path}}"{{/operation}}{{/operations}}
        }
    }

    var method: Moya.Method {
        switch self { {{#operations}}{{#operation}}
            case {{operationId}}: return .{{httpMethod}}{{/operation}}{{/operations}}
        }
    }

    var parameters: [String: AnyObject]? {
        switch self { {{#operations}}{{#operation}}
            case .{{operationId}}(let attributes): return attributes.toRequestParams(){{/operation}}{{/operations}}
        }
    }

    var sampleData: NSData { return NSData() }
    var multipartBody: [MultipartFormData]? { return nil }
}{{#operations}}{{#operation}}

// MARK: - HTTPHeaders
extension {{classname}}: HTTPHeaders {

    var httpHeaders: [String: String] {
        switch self { {{#operations}}{{#operation}}
            case .{{operationId}}(let attributes): return attributes.toHeaderParams(){{/operation}}{{/operations}}
        }
    }
}

struct {{operationId}}RequestAttributes { {{#allParams}}

{{#headerParams}}
    let {{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}?{{/required}} //header param{{/headerParams}}
{{#bodyParams}}
let {{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}?{{/required}} //body param{{/bodyParams}}
{{#pathParams}}
let {{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}?{{/required}} //path param{{/pathParams}}
{{#queryParams}}
let {{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}?{{/required}} //query param{{/queryParams}}
{{#headerParams}}
let {{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}?{{/required}} //header param{{/headerParams}}
{{#formParams}}
let {{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}?{{/required}} //form param{{/formParams}}

    init({{#allParams}}{{paramName}}: {{#isEnum}}{{#isContainer}}{{{dataType}}}{{/isContainer}}{{^isContainer}}{{{datatypeWithEnum}}}_{{operationId}}{{/isContainer}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}}{{^required}}? = nil{{/required}}{{#hasMore}},
        {{/hasMore}}{{/allParams}}) { {{#allParams}}
            self.{{paramName}} = {{paramName}}{{/allParams}}
        }

    func toRequestParams() -> [String: AnyObject]? {
        var params = [String: AnyObject](){{#allParams}}{{#isQueryParam}}
        params.insert({{paramName}}, forKey: "{{paramName}}"){{/isQueryParam}}{{/allParams}}
        return params
    }

    func toHeaderParams() -> [String: String] {
        var params = [String: String](){{#headerParams}}
        params.insert({{paramName}}, forKey: "{{paramName}}"){{/headerParams}}
        return params
    }

}
{{/operation}}{{/operations}}
