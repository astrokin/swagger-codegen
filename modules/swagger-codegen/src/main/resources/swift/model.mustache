{{#models}}{{#model}}// Autogenerated by https://github.com/astrokin/swagger-codegen //Do not modify it without strong needs!
import Foundation
{{#description}}
/** {{description}} */{{/description}}
struct {{classname}}: JSONDecoding {
{{#vars}}{{#isEnum}}
    enum {{datatypeWithEnum}}: String, JSONDecodableEnum {
        case Undefined {{#allowableValues}}{{#values}}
        case {{enum}} = "{{raw}}"{{/values}}{{/allowableValues}}
    }
{{/isEnum}}
{{/vars}}
{{#requiredVars}}
{{#isEnum}}
    {{#description}}/** {{description}} */
    {{/description}}let {{name}}: {{{datatypeWithEnum}}}
{{/isEnum}}
{{^isEnum}}
    {{#description}}/** {{description}} */
    {{/description}}let {{name}}: {{{datatype}}}
{{/isEnum}}
{{/requiredVars}}

{{#optionalVars}}
{{#isEnum}}
    {{#description}}/** {{description}} */
    {{/description}}let {{name}}: {{{datatypeWithEnum}}}?
{{/isEnum}}
{{^isEnum}}
    {{#description}}/** {{description}} */
    {{/description}}let {{name}}: {{{datatype}}}?
{{/isEnum}}
{{/optionalVars}}

    static func decodeJSON(input: AnyObject) throws -> {{classname}} {
        let dict = try JSONDictionary(input)
            return try {{classname}}({{#vars}}{{#isNotContainer}}
            {{name}}: {{#required}}{{#isEnum}}(try? {{/isEnum}}{{/required}}{{^required}}{{#isEnum}}try?{{/isEnum}}{{/required}} dict.decodeJSON(forKey: "{{baseName}}"){{#required}}{{#isEnum}}) ?? {{{datatypeWithEnum}}}.Undefined{{/isEnum}}{{/required}}{{/isNotContainer}}{{^isNotContainer}}
            {{name}}: dict.forArray(forKey: "{{baseName}}"){{/isNotContainer}}{{^-last}},{{/-last}}{{/vars}}
        )
    }

}{{/model}}
{{/models}}
